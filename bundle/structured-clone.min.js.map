{"version":3,"sources":["webpack://StructuredClone/webpack/universalModuleDefinition","webpack://StructuredClone/webpack/bootstrap","webpack://StructuredClone/./lib/utils.js","webpack://StructuredClone/./lib/index.js","webpack://StructuredClone/./lib/clone.js","webpack://StructuredClone/external \"assert\"","webpack://StructuredClone/./lib/declone.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AssertionError","TypePattern","e","globalThis","global","window","isTypedClone","data","length","test","cloneError","err","assign","message","stack","decloneError","obj","reservedKeys","Error","defineProperties","x","includes","clone","declone","forHSCA","parentNodes","type","String","isNaN","isFinite","Date","toISOString","RegExp","Map","map","undefined","set","push","Set","add","ArrayBuffer","Uint8Array","DataView","buffer","isView","constructor","Array","isArray","arr","len","proto","getPrototypeOf","toJSON","require","decloneArray","BigInt","Number","pattern","flags","slice","split","from"],"mappings":"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","file":"structured-clone.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StructuredClone\"] = factory();\n\telse\n\t\troot[\"StructuredClone\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/** @typedef {Error & { [x: string]: any }} ErrorObject */\n/** @type {ErrorObject} */\nvar AssertionError;\nconst TypePattern = /^\\[\\[[A-Z][a-zA-Z0-9_]+\\]\\]$/;\n\n// For Node.js-like environment.\nif (typeof require === \"function\" && typeof module === \"object\") {\n    try {\n        AssertionError = require(\"assert\").AssertionError;\n    } catch (e) { }\n}\n\n// Fix global variable.\nif (typeof globalThis === \"undefined\") {\n    var globalThis;\n\n    if (typeof global === \"object\") {\n        globalThis = global;\n    } else if (typeof window === \"object\") {\n        globalThis = window;\n    }\n}\n\nexports.isTypedClone = isTypedClone;\n/**\n * @param {any[]} data \n */\nfunction isTypedClone(data) {\n    return data.length === 2\n        && typeof data[0] === \"string\"\n        && TypePattern.test(data[0]);\n}\n\nexports.cloneError = cloneError;\n/**\n * @param {ErrorObject} err\n * @returns {ErrorObject}\n */\nfunction cloneError(err) {\n    return Object.assign({\n        name: err.name,\n        message: err.message,\n        stack: err.stack\n    }, err);\n}\n\nexports.decloneError = decloneError;\n/**\n * @param {ErrorObject} obj\n * @returns {ErrorObject}\n */\nfunction decloneError(obj) {\n    let reservedKeys = [\"name\", \"message\", \"stack\"];\n    let err;\n\n    if (obj.name === \"AssertionError\" && AssertionError) {\n        err = Object.create(AssertionError.prototype);\n    } else {\n        err = Object.create((globalThis[obj.name] || Error).prototype);\n    }\n\n    Object.defineProperties(err, {\n        message: { value: obj.message },\n        stack: { value: obj.stack }\n    });\n\n    for (let x in obj) {\n        if (!reservedKeys.includes(x)) {\n            err[x] = obj[x];\n        }\n    }\n\n    return err;\n}","exports.clone = require(\"./clone\").clone;\nexports.declone = require(\"./declone\").declone;","const { cloneError } = require(\"./utils\");\n\nexports.clone = clone;\n/**\n * Constructs a clone of the object that can be serialized with JSON or HTML\n * Structured Clone Algorithm.\n * @param data \n * @param forHSCA For HTML Structured Clone Algorithm, by default it's\n *  for JSON.\n */\nfunction clone(data, forHSCA = false, parentNodes = []) {\n    let type = typeof data;\n\n    if (data === null || data === undefined ||\n        type === \"function\" || type === \"symbol\") {\n        return data === null ? null : void 0;\n    }\n\n    if (type === \"bigint\") {\n        return forHSCA ? data : [\"[[BigInt]]\", String(data)];\n    } else if (type === \"number\") {\n        if (isNaN(data) || !isFinite(data)) {\n            return forHSCA ? data : [\"[[Number]]\", String(data)];\n        } else {\n            return data;\n        }\n    } else if (type === \"object\") {\n        if (parentNodes.includes(data)) {\n            return void 0;\n        } else {\n            parentNodes = [...parentNodes, data];\n        }\n\n        if (data instanceof Date) {\n            return forHSCA ? data : [\"[[Date]]\", data.toISOString()];\n        } else if (data instanceof RegExp) {\n            return forHSCA ? data : [\"[[RegExp]]\", String(data)];\n        } else if (data instanceof Error) {\n            return forHSCA ? data : [\"[[Error]]\", cloneError(data)];\n        } else if (data instanceof Map) {\n            let map = forHSCA ? new Map() : [];\n\n            for (let [key, value] of data) {\n                key = clone(key, forHSCA, parentNodes);\n\n                if (key !== undefined) {\n                    value = clone(value, forHSCA, parentNodes);\n                    forHSCA ? map.set(key, value) : map.push([key, value]);\n                }\n            }\n\n            return forHSCA ? map : [\"[[Map]]\", map];\n        } else if (data instanceof Set) {\n            let set = forHSCA ? new Set() : [];\n\n            for (let value of data) {\n                value = clone(value, forHSCA, parentNodes);\n\n                if (value !== undefined) {\n                    forHSCA ? set.add(value) : set.push(value);\n                }\n            }\n\n            return forHSCA ? set : [\"[[Set]]\", set];\n        } else if (data instanceof ArrayBuffer) {\n            return forHSCA ? data : [\"[[ArrayBuffer]]\", [...new Uint8Array(data)]];\n        } else if (data instanceof DataView) {\n            return forHSCA ? data : [\"[[DataView]]\", [...new Uint8Array(data.buffer)]];\n        } else if (ArrayBuffer.isView(data)) {\n            return forHSCA ? data : [`[[${data.constructor.name}]]`, [...data]];\n        } else if (!forHSCA && typeof data[\"toJSON\"] === \"function\") {\n            return clone(data.toJSON(), forHSCA, parentNodes);\n        } else if (Array.isArray(data)) {\n            let arr = [];\n\n            for (let i = 0, len = data.length; i < len; ++i) {\n                arr.push(clone(data[i], forHSCA, parentNodes));\n            }\n\n            return arr;\n        } else {\n            let proto = Object.getPrototypeOf(data);\n\n            if (!forHSCA || proto === null || proto.constructor === Object) {\n                let obj = Object.create(proto);\n\n                for (let key in data) {\n                    // Only care about own properties.\n                    if (data.hasOwnProperty(key)) {\n                        let value = clone(data[key], forHSCA, parentNodes);\n                        value !== undefined && (obj[key] = value);\n                    }\n                }\n\n                return obj;\n            } else {\n                return data;\n            }\n        }\n    }\n\n    return data;\n}","module.exports = require(\"assert\");","const { isTypedClone, decloneError } = require(\"./utils\");\n\n// Fix global variable.\nif (typeof globalThis === \"undefined\") {\n    var globalThis;\n\n    if (typeof global === \"object\") {\n        globalThis = global;\n    } else if (typeof window === \"object\") {\n        globalThis = window;\n    }\n}\n\nexports.declone = declone;\n/**\n * When constructing a clone for JSON, this function is used to destruct the\n * output data to it's original form.\n * @param {any} data \n */\nfunction declone(data) {\n    if (typeof data !== \"object\" || data === null) {\n        return data;\n    } else {\n        if (Array.isArray(data)) {\n            if (isTypedClone(data)) {\n                let [type, value] = data;\n\n                try {\n                    switch (type) {\n                        case \"[[BigInt]]\":\n                            return BigInt(value);\n\n                        case \"[[Number]]\":\n                            return Number(value);\n\n                        case \"[[Date]]\":\n                            return new Date(value);\n\n                        case \"[[RegExp]]\": {\n                            let [pattern, flags] = value.slice(1).split(\"/\");\n                            return new RegExp(pattern, flags);\n                        }\n\n                        case \"[[Error]]\": {\n                            return decloneError(value);\n                        }\n\n                        case \"[[Map]]\":\n                            return new Map(declone(value));\n\n                        case \"[[Set]]\":\n                            return new Set(declone(value));\n\n                        case \"[[ArrayBuffer]]\": {\n                            return Uint8Array.from(value).buffer;\n                        }\n\n                        case \"[[DataView]]\": {\n                            return new DataView(Uint8Array.from(value).buffer);\n                        }\n\n                        case \"[[Buffer]]\":\n                        case \"[[Int8Array]]\":\n                        case \"[[Uint8Array]]\":\n                        case \"[[Uint8ClampedArray]]\":\n                        case \"[[Int16Array]]\":\n                        case \"[[Uint16Array]]\":\n                        case \"[[Int32Array]]\":\n                        case \"[[Uint32Array]]\":\n                        case \"[[BigInt64Array]]\":\n                        case \"[[BigUint64Array]]\":\n                        case \"[[Float32Array]]\":\n                        case \"[[Float64Array]]\": {\n                            type = type.slice(2, -2);\n                            return globalThis[type].from(value);\n                        }\n\n                        default:\n                            return data;\n                    }\n                } catch (e) {\n                    return decloneArray(data);\n                }\n            } else {\n                return decloneArray(data);\n            }\n        } else {\n            let obj = {};\n\n            for (let key in data) {\n                obj[key] = declone(data[key]);\n            }\n\n            return obj;\n        }\n    }\n}\n\n/**\n * @param {any[]} data \n */\nfunction decloneArray(data) {\n    let arr = [];\n\n    for (let i = 0, len = data.length; i < len; ++i) {\n        arr.push(declone(data[i]));\n    }\n\n    return arr;\n}"],"sourceRoot":""}